const settingTranslation = {
  setting: {
    placeholder: {
      pleaseEnterAnumber: 'Please enter a number'
    },
    label: {
      connectorKPI: 'Transition KPI',
      howToView: 'View Mode',
      caseIDLimit: 'Max. Case No.',
      speedLimit: 'Max. Animation Speed',
      analysisItems: 'Group Items',
      legend: 'Series',
      sortby: 'Sort By',
      conditionCriteria: 'Perspective',
      valuetype: 'Calculate',
      yaxis: 'Y-axis',
      classificationAttribute: 'Perspective',
      nodeKPI: 'Activity KPI ',
      eventClickMove: 'Default analysis menu',
      notifiLimit: 'Notification Settings',
      days: 'days',
      min: 'Min',
      max: 'Max',
      count: 'count',
      maxStorage: 'Max. storage',
      resultCache: 'Cache result',
      size: 'size',
      project: 'Project',
      dataset: 'Dataset',
      eventRepoPerDataset: 'Event log per dataset',
      eventRepo: 'Event log',
      processModel: 'Baseline process',
    },
    message: {
      check: 'Please check input value.',
      already: 'Role already exists.',
    },
    button: {
      reset: 'Reset',
      cancel: 'Cancel',
    },
    top: {
      reset: 'Reset',
      save: 'Save',
      cancel: 'Cancel'
    },
    side: {
      division: 'Menu',
      common: 'Common',
      dashboard: 'Dashboard',
      processSettings: 'Process Configuration',
      ProcessModel: 'Process Model',
      ProcessAnalysis: 'Process Analysis',
      ProcessComparison: 'Process Comparison',
      ProcessAnimation: 'Process Animation',
      ProcessFlow: 'Variant Analysis',
      DataAnalysisSettings: 'Event Analysis',
      ResourceRelationshipAnalysis: 'Resource Analysis',
      DataAnalysis: 'Matrix Analysis',
      ActivityAnalysis: 'Event Analysis',
      ganttChart: 'Variant Analysis',
      global: 'Global Setting',
    },
    common: {
      theme: 'Theme',
      defaultTheme: 'Default',
      brownTheme: 'Brown',
      darkTheme: 'Dark mode',
      blueTheme: 'Blue',
      grayTheme: 'Grey',
      saasTheme: 'SaaS Theme',
      proTheme: 'PRO Theme',
      entTheme: 'ENT Theme',

      clearCache: 'Clear Cache',
      workspace: 'Workspace',
      movingScreenWhenClickingEventLog: 'Default Analysis Menu',
      defaultWorkspace: 'Default Workspace',
      basicAnalysisPeriod: 'Default Duration',
      typeWithCase: 'Case Inclusion',
      basicAnalysisItems: 'Group Items',
      fullAnalysis: 'Case Ordering',
      algorithms: 'Algorithm',
    },
    dashboard: {
      defaultTab: 'Default Tab',
      fixedTab: 'Show Tab',
      dataSummary: 'Overview',
      activity: 'Activity',
      resource: 'Resource',
      contactPerson: 'Originator',
      cost: 'Cost'
    },
    processModel: {
      dependency: 'Dependency',
      minimumFrequency: 'Min. Frequency',
      accordingToData: 'Min. = 0.0, Max. = depend on the data',
      nodeSignificance: 'Activity Significance',
      arcSignificance: 'Arc Significance',
    },
    processAnalysis: {
      connectorKPI: 'Transition KPI'
    },
    processComparison: {
      connectorKPI: 'Transition KPI',
      viewMethod: 'View Mode'
    },
    processAnimation: {
      connectorKPI: 'Transition KPI',
      caseIDLimit: 'Max. Total Case',
      speedLimit: 'Max. Animation Speed'
    },
    resourceRelationshipAnalysis: {
      viewMethod: 'X-axis',
      conditionCriteria: 'Y-axis'
    },
    matrix: {
      howToView: 'X-axis',
      conditionCriteria: 'Y-axis',
      valuetype: 'Calculate',
    },
    dataAnalysis: {
      viewMethod: 'View Mode',
      conditionCriteria: 'Perspective',
      valuetype: 'Calculate'
    },
    activityAnalysis: {
      yaxis: 'Y-axis'
    },
    ganttChart: {
      analysisItem: 'Group Items',
      legend: 'Series',
      sortby: 'Sort By'
    },
    title: {
      complete: 'Completion',
      warning: 'Warning',
      error: 'Fail',
      delete: 'Delete',
      resetSettings: 'Reset Settings',
      all:'All',
    },
    content: {
      complete: 'Cache data has been successfully deleted.',
      error: 'Cache data deletion failed',
      error5: 'Cache data deletion failed',
      warning1: 'Input value has only spaces',
      warning2: 'Please enter at least 3 characters',
      warning3: 'Invalid name. Please only enter alphabet, hangeul and numeric characters.',
      warning4: 'Datasource name is duplicated.',
      warning5: 'Please enter number only.',
      warning6: 'The test connection must be successful in order to save the connection properties.',
      warning7: 'Please select time period',
      warning8: '다음 진행을 원할 시 다음 버튼을 눌러주세요',
      warning9: '뒤로가기 버튼을 눌러 새로운 매핑 작업을 해주세요',
      warning10: '다시 만들기 버튼을 눌러주세요',
      warning11: 'Please select time period',
      delete: 'Cache data will be deleted. Are you sure?',
      reset: 'Settings will be reset. Are you sure?',
    },
    selectbox: {
      gantt: 'Gantt Chart',
      esm: 'Monthly',
      vdurDesc: 'Longest Duration',
      twoView: 'Split',
      year: 'Year',
      matrixModel: 'Matrix Analysis',
      dashboard: 'Dashboard',
      socialAnalysis: 'Resource Analysis',
      reworksTotal: 'Reworks',
      bottlenecks: 'Bottleneck',
      standard: 'Trace Variant',
      count: 'Count',
      total2: 'Utilization',
      q2: 'Duration: Median',
      max: 'Duration: Max.',
      min: 'Duration: Min.',
      average: 'Duration: Avg.',
      total: 'Duration: Total',
      vs: 'Start Timestamp',
      activity: 'Activity',
      edf: 'Activity Flow',
      dotted: 'Dotted',
      vc: 'Complete Timestamp',
      circle: 'Circle',
      month: 'Monthly',
      esMonthly: 'Monthly',
      d: 'Dependency',
      d3Force: 'Default',
      all: 'Whole period',
      vdurAsc: 'Shortest Duration',
      ccnt: 'Case Count',
      ci: 'Case ID',
      processDiscovery: 'Process Discovery',
      deltaAnalysis: 'Process Comparison',
      logReplay: 'Process Animation',
      merged: 'Integrated View',
      standard2: 'Trace Variant',
      dynamic_attribute: 'Attributes',
      processFlow: 'Variant Analysis'
    }
  }
};

export default settingTranslation;
